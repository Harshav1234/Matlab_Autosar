<?xml version="1.0" encoding="UTF-8"?>
<AUTOSAR xmlns="http://autosar.org/schema/r4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://autosar.org/schema/r4.0 AUTOSAR_00047.xsd">
	<AR-PACKAGES>
		<AR-PACKAGE>
			<SHORT-NAME>AUTOSAR_Platform</SHORT-NAME>
			<AR-PACKAGES>
				<AR-PACKAGE>
					<SHORT-NAME>ImplementationDataTypes</SHORT-NAME>
					<ELEMENTS>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>boolean</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/boolean</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint8</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint8</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint16</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint32</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint32</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint64</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint64</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint8</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint16</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint32</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint64</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint64</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint8_least</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint8_least</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint16_least</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint16_least</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>sint32_least</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/sint32_least</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint8_least</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint8_least</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint16_least</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint16_least</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>uint32_least</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/uint32_least</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>float32</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/float32</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
						<IMPLEMENTATION-DATA-TYPE>
							<SHORT-NAME>float64</SHORT-NAME>
							<CATEGORY>VALUE</CATEGORY>
							<SW-DATA-DEF-PROPS>
								<SW-DATA-DEF-PROPS-VARIANTS>
									<SW-DATA-DEF-PROPS-CONDITIONAL>
										<BASE-TYPE-REF DEST="SW-BASE-TYPE">/AUTOSAR_Platform/BaseTypes/float64</BASE-TYPE-REF>
									</SW-DATA-DEF-PROPS-CONDITIONAL>
								</SW-DATA-DEF-PROPS-VARIANTS>
							</SW-DATA-DEF-PROPS>
							<TYPE-EMITTER>Platform_Types.h</TYPE-EMITTER>
						</IMPLEMENTATION-DATA-TYPE>
					</ELEMENTS>
				</AR-PACKAGE>
				<AR-PACKAGE>
					<SHORT-NAME>BaseTypes</SHORT-NAME>
					<ELEMENTS>
						<SW-BASE-TYPE>
							<SHORT-NAME>void</SHORT-NAME>
							<CATEGORY>VOID</CATEGORY>
							<BASE-TYPE-ENCODING>VOID</BASE-TYPE-ENCODING>
							<NATIVE-DECLARATION>void</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>boolean</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>8</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>BOOLEAN</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>8</MEM-ALIGNMENT>
							<BYTE-ORDER>OPAQUE</BYTE-ORDER>
							<NATIVE-DECLARATION>bool</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint8</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>8</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>8</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int8_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint16</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>16</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>16</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int16_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint32</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int32_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint64</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>64</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>64</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int64_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint8</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>8</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>8</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint8_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint16</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>16</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>16</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint16_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint32</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint32_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint64</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>64</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>64</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint64_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint8_least</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int_least8_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint16_least</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int_least16_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>sint32_least</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::int_least32_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint8_least</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint_least8_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint16_least</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint_least16_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>uint32_least</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>std::uint_least32_t</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>float32</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>IEEE754</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>32</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>float</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
						<SW-BASE-TYPE>
							<SHORT-NAME>float64</SHORT-NAME>
							<CATEGORY>FIXED_LENGTH</CATEGORY>
							<BASE-TYPE-SIZE>64</BASE-TYPE-SIZE>
							<BASE-TYPE-ENCODING>IEEE754</BASE-TYPE-ENCODING>
							<MEM-ALIGNMENT>64</MEM-ALIGNMENT>
							<BYTE-ORDER>MOST-SIGNIFICANT-BYTE-LAST</BYTE-ORDER>
							<NATIVE-DECLARATION>double</NATIVE-DECLARATION>
						</SW-BASE-TYPE>
					</ELEMENTS>
				</AR-PACKAGE>
			</AR-PACKAGES>
		</AR-PACKAGE>
	</AR-PACKAGES>
</AUTOSAR>
